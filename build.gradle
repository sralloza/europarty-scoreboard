plugins {
    id 'application'
    id 'groovy'
    id 'java'
    id 'io.freefair.lombok' version '6.4.1'
}

test {
    testLogging {
        events 'passed', 'skipped', 'failed'

        showExceptions true
        exceptionFormat 'full'
        showCauses true
        showStackTraces true

        showStandardStreams false
    }
}

ext.getTestVariable = { asked ->
    if (!file('src/main/resources/test.env').exists()) {
        return null
    }
    file('src/main/resources/test.env').eachLine { line ->
        def (key, value) = line.tokenize('=')
        if (key == asked) {
            System.setProperty(asked, value)
        }
    }
    return System.getProperty(asked)
}

if (project.getTestVariable('SW_USERNAME') != null) {
    tasks.test.environment('SW_USERNAME', project.getTestVariable('SW_USERNAME'))
}
if (project.getTestVariable('SW_PASSWORD') != null) {
    tasks.test.environment('SW_PASSWORD', project.getTestVariable('SW_PASSWORD'))
}

group 'es.sralloza'
version '1.0-SNAPSHOT'
mainClassName = 'ScoreboardCreationByForm'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.codehaus.groovy:groovy-all:3.0.10'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'

    implementation 'io.github.cdimascio:dotenv-java:2.2.3'
    implementation 'org.seleniumhq.selenium:selenium-java:4.1.3', {
        transitive = false
    }
    implementation 'org.seleniumhq.selenium:selenium-api:4.1.3'
    implementation 'org.seleniumhq.selenium:selenium-support:4.1.3'
    implementation 'org.seleniumhq.selenium:selenium-chrome-driver:4.1.3'
    implementation 'com.google.guava:guava:31.1-jre'

    implementation 'org.projectlombok:lombok:1.18.22'
    implementation 'commons-io:commons-io:2.11.0'
    implementation 'com.google.inject:guice:5.1.0'

    implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.2.2'

    implementation 'com.google.api-client:google-api-client:1.33.4'
    implementation 'com.google.apis:google-api-services-sheets:v4-rev20220322-1.32.1'
}

test {
    useJUnitPlatform()
}

task fatJar(type: Jar) {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
    exclude 'META-INF/*.RSA', 'META-INF/*.SF', 'META-INF/*.DSA'

    manifest {
        attributes 'Main-Class': mainClassName
    }

    from { configurations.compileClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}
